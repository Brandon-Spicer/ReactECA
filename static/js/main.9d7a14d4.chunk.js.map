{"version":3,"sources":["index.js"],"names":["ECA","props","state","rule","ruleMap","Array","history","view","iteration","viewIter","nRow","nCell","seed","fill","Math","floor","i","push","forward","bind","rewind","steps","this","currState","length","nextState","slice","hood","ruleIndex","concat","setState","newRule","parseInt","newHist","newView","j","nRows","buttonsIndex","min","className","Grid","onClick","changeSquare","RuleForm","onSubmit","ruleChange","Button","label","JumpToStart","JumpToEnd","reset","React","Component","rows","cols","gridList","rowList","ButtonSquare","key","toString","alive","Square","renderSquares","color","style","value","handleChange","handleSubmit","event","target","preventDefault","type","width","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d7a14d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// TODO:\r\n//    Run.\r\n//    Seperate components into files.\r\n//    \r\n\r\nclass ECA extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rule: 126,\r\n      ruleMap: Array(8),\r\n      history: [],\r\n      view: [],\r\n      iteration: 1,\r\n      viewIter: 1,\r\n      nRow: 40,\r\n      nCell: 80\r\n    };\r\n\r\n    let nRow = this.state.nRow;\r\n    let nCell = this.state.nCell;\r\n\r\n    // create initial state \r\n    const seed = Array(nCell).fill(0);\r\n    seed[Math.floor(nCell / 2)] = 1;\r\n\r\n    // add to history\r\n    this.state.history[0] = seed;\r\n\r\n    // create view array\r\n    this.state.view[0] = seed;\r\n    for (let i=1; i<nRow; i++) {\r\n      this.state.view.push(Array(nCell).fill(0));\r\n    }\r\n\r\n    // create ruleMap\r\n    for (let i=0; i<8; i++) {\r\n      this.state.ruleMap[i] = Math.floor(this.state.rule / 2**i) % 2;\r\n    }\r\n\r\n    this.forward = this.forward.bind(this);\r\n    this.rewind = this.rewind.bind(this);\r\n  }\r\n\r\n  forward(steps=1) {\r\n    let iteration = this.state.iteration;\r\n    let viewIter = this.state.viewIter;\r\n    let history = this.state.history;\r\n    let view = this.state.view;\r\n    const nRow = this.state.nRow;\r\n    let currState = history[history.length-1];\r\n    let nextState = currState.slice();\r\n\r\n    for (let i=0; i<steps; i++) {\r\n      // if viewIter == iteration, calcNext\r\n      // else, update viewIter and view\r\n      if (viewIter == iteration) {\r\n        // calculate the next state \r\n        for (let i=0; i<currState.length; i++) {\r\n          let hood = [];\r\n\r\n          // left \r\n          if (i === 0) {\r\n            hood[0] = currState[currState.length-1];\r\n          } else {\r\n            hood[0] = currState[i-1];\r\n          }\r\n          // center\r\n          hood[1] = currState[i];\r\n          // right\r\n          if (i === currState.length-1) {\r\n            hood[2] = currState[0];\r\n          } else {\r\n            hood[2] = currState[i+1];\r\n          }\r\n\r\n          // calculate nextState[i]\r\n          // hood -> [binary to dec] -> ruleIndex -> [ruleMap] -> nextState[i]\r\n          let ruleIndex = hood[0]; \r\n          ruleIndex += hood[1]*2;\r\n          ruleIndex += hood[2]*4;\r\n          nextState[i] = this.state.ruleMap[ruleIndex];\r\n        }\r\n\r\n        // update local vars\r\n        if (iteration < nRow) {\r\n          view[iteration] = nextState;\r\n        } else {\r\n          view = view.slice(1).concat([nextState]);\r\n        }\r\n        history = history.concat([nextState]);\r\n        currState = history[history.length-1];\r\n        nextState = currState.slice();\r\n\r\n        iteration += 1;\r\n        viewIter += 1;\r\n      } else {\r\n        viewIter += 1;\r\n        view = history.slice(viewIter - nRow, viewIter);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      view: view,\r\n      history: history,\r\n      viewIter: viewIter,\r\n      iteration: iteration\r\n    });\r\n  }\r\n\r\n  rewind(steps=1) {\r\n    let viewIter = this.state.viewIter;\r\n    let history = this.state.history;\r\n    let view = this.state.view;\r\n    const nRow = this.state.nRow;\r\n\r\n    for (let i=0; i<steps; i++) {\r\n      if (viewIter > nRow) {\r\n        viewIter -= 1;\r\n        view = history.slice(viewIter - nRow, viewIter);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      view: view,\r\n      viewIter: viewIter\r\n    });\r\n  }\r\n\r\n  JumpToStart() {\r\n    let history = this.state.history;\r\n    const nRow = this.state.nRow;\r\n    const viewIter = this.state.viewIter;\r\n\r\n    if (viewIter > nRow) {\r\n      this.setState({\r\n        view: history.slice(0, nRow),\r\n        viewIter: nRow\r\n      });\r\n    }\r\n  }\r\n\r\n  JumpToEnd() {\r\n    let history = this.state.history;\r\n    const nRow = this.state.nRow;\r\n    const viewIter = this.state.viewIter;\r\n\r\n    if (viewIter >= nRow) {\r\n      this.setState({\r\n        view: history.slice(history.length-nRow, history.length),\r\n        viewIter: history.length\r\n      });\r\n    }\r\n  }\r\n\r\n  ruleChange(newRule) {\r\n    let ruleMap = this.state.ruleMap;\r\n    \r\n    // update ruleMap\r\n      for (let i=0; i<8; i++) {\r\n        ruleMap[i] = Math.floor(newRule / 2**i) % 2;\r\n      }\r\n    this.setState({\r\n      rule: parseInt(newRule),\r\n      ruleMap: ruleMap\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    const history = this.state.history;\r\n    const nRow = this.state.nRow;\r\n    const nCell = this.state.nCell;\r\n\r\n    let newHist = history.slice(0, 1);\r\n    let newView = history.slice(0, 1);\r\n    for (let i=1; i<nRow; i++) {\r\n      newView[i] = Array(nCell).fill(0);\r\n    }\r\n\r\n    this.setState({\r\n      history: newHist,\r\n      iteration: 1,\r\n      viewIter: 1,\r\n      view: newView\r\n    });\r\n  }\r\n\r\n  changeSquare(j) {\r\n    const viewIter = this.state.viewIter;\r\n    const nRows = this.state.nRows;\r\n    let view = this.state.view;\r\n    let history = this.state.history;\r\n    let currState = history[history.length-1];\r\n\r\n\r\n    // change the jth button in the row at i == buttonsIndex\r\n    let buttonsIndex = Math.min(this.state.viewIter-1, this.state.nRows-1);\r\n    // modify history and view\r\n    currState[j] = 1 ^ currState[j];\r\n\r\n    view[buttonsIndex] = currState;\r\n    history[history.length-1] = currState;\r\n\r\n    this.setState({\r\n      history: history,\r\n      view: view\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"grid\">\r\n          <Grid\r\n            view={this.state.view}         \r\n            viewIter={this.state.viewIter}\r\n            iteration={this.state.iteration}\r\n            onClick={(j) => this.changeSquare(j)}\r\n          />\r\n        </div>\r\n        <div className=\"button-wrapper clearfix\">\r\n          <div className=\"formContainer\">\r\n            <RuleForm\r\n              onSubmit={(newRule) => this.ruleChange(newRule)}\r\n            />\r\n          </div>\r\n          <Button \r\n            className=\"controlButton\"\r\n            label=\"Next\"\r\n            onClick={() => this.forward()}\r\n          />\r\n          <Button\r\n            className=\"controlButton\"\r\n            label=\"Back\"\r\n            onClick={() => this.rewind()}\r\n          />\r\n          <Button\r\n            className=\"controlButton\"\r\n            label=\"Next 10\"\r\n            onClick={() => this.forward(10)}\r\n          />\r\n          <Button\r\n            className=\"controlButton\"\r\n            label=\"Back 10\"\r\n            onClick={() => this.rewind(10)}\r\n          />\r\n          <Button\r\n            className=\"controlButton\"\r\n            label=\"Jump to start\"\r\n            onClick={() => this.JumpToStart()}\r\n          />\r\n          <Button\r\n            className=\"controlButton\"\r\n            label=\"Jump to end\"\r\n            onClick={() => this.JumpToEnd()}\r\n          />\r\n          <Button\r\n            className=\"controlButton\"\r\n            label=\"Reset\"\r\n            onClick={() => this.reset()}\r\n          />\r\n        </div>\r\n        <div className=\"infoContainer\">\r\n          <table>\r\n            <tr>\r\n              <td>Rule:</td>\r\n              <td>{this.state.rule}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Gens:</td>\r\n              <td>{this.state.iteration}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Index:</td>\r\n              <td>{this.state.viewIter}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Grid extends React.Component {\r\n  renderSquares() {\r\n    const rows = this.props.view.length;\r\n    const cols = this.props.view[0].length;\r\n    const viewIter = this.props.viewIter;\r\n    const iteration = this.props.iteration;\r\n\r\n    let gridList = [];\r\n\r\n    for (let i=0; i<rows; i++) {\r\n      let rowList = []\r\n      let buttonsIndex = Math.min(viewIter-1, rows-1);\r\n\r\n      // condition for making a button row\r\n      if (((viewIter == iteration)) && (i == buttonsIndex)) {\r\n        // insert a row of buttons\r\n        for (let j=0; j<cols; j++) {\r\n          rowList.push(\r\n            <ButtonSquare\r\n              key={(i*10 + j).toString()}\r\n              alive={this.props.view[i][j]}\r\n              onClick={() => this.props.onClick(j)}\r\n            />\r\n          );\r\n        }\r\n      } else {\r\n        // make non-clickable square row\r\n        for (let j=0; j<cols; j++) {\r\n          rowList.push(\r\n            <Square\r\n              key={(i*10 + j).toString()}\r\n              alive={this.props.view[i][j]}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      gridList.push(<div className=\"row\">{rowList}</div>);\r\n    }\r\n\r\n    return (gridList);\r\n  }\r\n\r\n  render() {\r\n    return (this.renderSquares());\r\n  }\r\n}\r\n\r\nfunction Square(props) {\r\n  let color = props.alive? \"#ff5638\": \"white\";\r\n  return (\r\n    <div \r\n      className=\"square\"\r\n      style={{\r\n        \"background-color\": color, \r\n        \"box-sizing\": \"border-box\"\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n}\r\n\r\nclass ButtonSquare extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"buttonSquare\"\r\n        style={{\"background-color\": this.props.alive? \"#ff5638\": \"#e0e0e0\"}}\r\n        onClick={this.props.onClick}\r\n      >\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button className={props.className} onClick={props.onClick}>\r\n      {props.label}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass RuleForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: \"126\"};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // pass this.state.value into a function passed as a prop that updates ECA state\r\n    this.props.onSubmit(this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Rule=  \r\n          <input type=\"text\" value={this.state.value} style={{width: \"40px\"}} onChange={this.handleChange} />\r\n        </label>\r\n          <input type=\"submit\" value=\"submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <ECA />,\r\n  document.getElementById('root')\r\n);\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}